# -----------------------------------------------------------------------------
# Description: Makefile
# Author(s): retgits <https://github.com/retgits/>
# Last updated: 2020-02-14
# 
# This software may be modified and distributed under the terms of the
# MIT license. See the LICENSE file for details.
# -----------------------------------------------------------------------------

## The stage to deploy to
stage         	:= dev

## The name of the project
project_name  	:= serverless-payment

## The author of the project
author          := retgits

## The name of the team
team			:= vcs

## The version of the project, either uses the current commit hash, or will default to "dev"
version       	:= $(strip $(if $(shell git describe --tags --always --dirty="-dev"),$(shell git describe --tags --always --dirty="-dev"),dev))

## The Amazon S3 bucket to upload files to
aws_bucket    	?= $$AWS_S3_BUCKET

## The AWS AccountID to use
aws_account_id  ?= $$AWS_ACCOUNTID

# Suppress checking files and all Make output
.PHONY: help plugins build vuln clean deploy destroy
.SILENT: help plugins build vuln clean deploy destroy

# Targets
help: ## Displays the help for each target (this message)
	echo
	echo Usage: make [TARGET]
	echo
	echo Makefile targets
	grep -E '^[a-zA-Z_-]+:.*?## .*$$' Makefile.lambda | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	echo

plugins: ## Install the plugins needed for the Serverless framework
	echo
	npm install --save serverless-offline
	echo

build: ## Build the executable for Lambda
	echo
ifeq ($(TYPE), eventbridge)
	GOOS=linux GOARCH=amd64 go build -o ./bin/lambda-payment-eventbridge ../../cmd/lambda-payment-eventbridge
endif
ifeq ($(TYPE), sqs)
	GOOS=linux GOARCH=amd64 go build -o ./bin/lambda-payment-sqs ../../cmd/lambda-payment-sqs
endif
	echo

vuln: ## Scans the Go.mod file for known vulnerabilities using Snyk.
	echo
	snyk test --file=../../go.mod
	echo

clean: ## Remove all generated files
	echo
	-rm -rf bin
	-rm -rf node_modules
	-rm package-lock.json
	echo

deploy: ## Deploy the app to AWS Lambda
	echo
	echo serverless deploy --config serverless-$(TYPE).yaml --stage $(stage) --bucket $(aws_bucket) --vrs $(version) --author $(author) --team $(team) --feature acmeserverless --accountID $(aws_account_id)
	echo

destroy: ## Deletes the Serverless stack and all created resources
	echo
	serverless delete
	echo